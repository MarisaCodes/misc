---
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import Home from "../../components/page-comps/Home";
import PostCards from "../../components/PostCards";
import Layout from "../../layouts/Layout.astro";
let animes = await Astro.glob("../../content/anime/*.md");
animes = animes.sort((a, b) => {
  return (
    new Date(b.frontmatter.date).getTime() -
    new Date(a.frontmatter.date).getTime()
  );
});
---

<style>
  .custom {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 5;
    overflow: hidden;
  }
  .search-div {
    display: flex;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 10px;
  }
</style>
<Layout>
  <Home client:load>
    <div class="section">
      <Breadcrumbs>
        <li><a href="/">Home</a></li>
        <li class="is-active"><a href="/anime">anime</a></li>
      </Breadcrumbs>
      <div class="search-div" style="max-width: fit-content;">
        <input
          type="search"
          class="input"
          autocomplete="off"
          id="search-anime-input"
          placeholder="Filter with keywords..."
        />
        <span class="tag is-info is-medium">Filter using anime keywords</span>
      </div>
      {
        animes.map(({ frontmatter, Content }) => {
          const { title, thumbnail, href, date } = frontmatter;
          return (
            <div class="anime">
              <PostCards
                date={date}
                title={title}
                href={href}
                thumbnail={thumbnail}
                client:load
              >
                <Content />
              </PostCards>
            </div>
          );
        })
      }
    </div>
  </Home>
</Layout>

<script>
  const el = {
    animes: document.querySelectorAll(".anime"),
    searchInput: document.querySelector(
      "#search-anime-input"
    ) as HTMLInputElement,
  };

  el.searchInput.addEventListener("input", () => {
    const val = el.searchInput.value.toLocaleLowerCase();
    console.log(val);
    if (!val) {
      el.animes.forEach((anime) => {
        anime.classList.remove("is-hidden");
      });
    } else {
      el.animes.forEach((anime) => {
        const contents = anime.textContent;
        if (contents.toLocaleLowerCase().includes(val)) {
          anime.classList.remove("is-hidden");
        } else {
          anime.classList.add("is-hidden");
        }
      });
    }
  });
</script>
